apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigdata-manager-ui
  namespace: bigdata-manager
  labels:
    app: bigdata-manager
    component: ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bigdata-manager
      component: ui
  template:
    metadata:
      labels:
        app: bigdata-manager
        component: ui
    spec:
      containers:
      - name: ui
        image: ${REGISTRY}/bigdata-manager-ui:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: "256Mi"
          requests:
            cpu: "0.1"
            memory: "128Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: bigdata-manager-ui
  namespace: bigdata-manager
  labels:
    app: bigdata-manager
    component: ui
spec:
  selector:
    app: bigdata-manager
    component: ui
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bigdata-manager-ingress
  namespace: bigdata-manager
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: bigdata-manager.example.com
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: bigdata-manager-ui
            port:
              number: 80
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: bigdata-manager-server
            port:
              number: 8080 