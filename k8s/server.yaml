apiVersion: v1
kind: Secret
metadata:
  name: server-secrets
  namespace: bigdata-manager
type: Opaque
data:
  # 使用 echo -n 'your-secret' | base64 生成
  jwt-secret: eW91cnNlY3JldGtleQ==  # yoursecretkey
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-config
  namespace: bigdata-manager
data:
  config.yaml: |
    server:
      port: 8080
      jwt_secret: ${JWT_SECRET}
    
    database:
      host: mysql
      port: 3306
      user: bigdata
      password: ${DB_PASSWORD}
      name: bigdata_manager
      max_open_conns: 100
      max_idle_conns: 10
    
    logging:
      level: info
      output: stdout
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigdata-manager-server
  namespace: bigdata-manager
  labels:
    app: bigdata-manager
    component: server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bigdata-manager
      component: server
  template:
    metadata:
      labels:
        app: bigdata-manager
        component: server
    spec:
      containers:
      - name: server
        image: ${REGISTRY}/bigdata-manager-server:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: server-config
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: user-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secrets
              key: jwt-secret
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/configs
      volumes:
      - name: config-volume
        configMap:
          name: server-config
---
apiVersion: v1
kind: Service
metadata:
  name: bigdata-manager-server
  namespace: bigdata-manager
  labels:
    app: bigdata-manager
    component: server
spec:
  selector:
    app: bigdata-manager
    component: server
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP 